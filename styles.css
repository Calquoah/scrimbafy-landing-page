/* body {
    font-family: 'Source Sans 3', sans-serif;
    color: #404040;
    margin: 0;
}

/* =============
    Typography
    ============== */

/* h1 {
    font-weight: 400;
}

.beta-text {
    font-weight: 900;
}

.subheading {
    color: #575757;
    font-weight: 900;
} */


/* ==============
    Intro
    ============= */


/* 
  Challenge: Style the .intro section
    - Convert into a flex container; 
      display its content in a column
    - Set a minimum height of 250px
    - Center-align its content
    - Vertically center the content
    - Remove the space around the edges of the page
*/



/* .intro {
   color: #fff;
   background-color: #9480e4; 
   display: flex;
   flex-direction: column;
   min-height: 250px;
   text-align: center;
   justify-content: center;
} */


/* ================
    Main content
    =============== */


/* 
  Challenge: Style the main content
    - Use flexbox to horizontally center all items inside 
      .main-content. The <p> text should remain left-aligned.
    - Use em to give .main-content a top padding equal to 40px
      and a left and right padding equal to 32px.
    - Set the width of .img-main to 120px and display it as a rounded image.
*/

/* .main-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-top: 2.5em;
    padding-left: 2em;
    padding-right: 2em;
}

.img-main {
    width: 120px;
    border-radius: 50%;
} */


/* ===============
    Form 
    =============== */



/* ===============
    Media Queries
    =============== */ 









/* Cleaner Code */

/* Using the box-sizing property
to make sure the input fields as 
well as the button are the same 
length */

*, *::before, *::after {
  box-sizing: border-box;
}


body {
    font-family: 'Source Sans 3', sans-serif;
    color: #404040;
    margin: 0;
}

/* =================
    Typography 
   ================= */


/* 
  Challenge: Set the initial styles for text
    - Set the h1 to a relative font-size value equal to 40px
    - Apply a text shadow to the h1 using the color value #816fca
*/

/* Challenge: Set the initial styles for text
- Set the h2 to a relative font-size value equal to 36px
- Give the h2 a top and bottom margin value in em equal to 6px 
*/

/* 
  Challenge: Set the initial styles for text
    - Set the paragraph to a relative font-size value equal to 18px
    - Set the p line-height to 1.35 times its font-size value
    - Give .subheading a bottom margin in em equal to half its font-size value
*/



h1 {
    font-size: 2.5rem;
    font-weight: 400;
    text-shadow: 0 2px #816fca;
}

h2 {
    font-size: 2.25rem;
    margin: 0.167 0; /* 6/36 = -.1667 */
}

p {
    font-size: 1.125rem;
    line-height: 1.5em;
}

.beta-text { 
    font-weight: 900;
    /*text-transform: uppercase;*/
}

.subheading {
    color: #575757;
    font-weight: 900;
    margin-bottom: 0.5em; /* Its inherited font-size is 16px */
    /*text-transform: uppercase;*/
}

/* Let's make the code a little DRYer */

.beta-text,
.subheading,
.top-text {
    text-transform: uppercase;
}


/* 
  Challenge: 
    Adjust the visual order of .top-text and re-distribute
    the space inside .intro: 
      - Display .top-text above the h1 and align it to 
        the top edge of the .intro section
      - Evenly distribute the content inside .intro
      - The top border of .top-text should match the width of the text
*/


.top-text {
  order: -1;
  font-size: 0.875rem;
  font-weight: 900;
  padding-top: 0.25em;
  border-top: 5px solid;
  margin: 0 auto;
  /* margin-left: auto; These two elements are used to center the top
  margin-right: auto; border to the exact width of the text */
}

.fine-print {
  font-size: 0.75rem;
  letter-spacing: 1px;
  color: #858585;
}

/* =================
    Flex containers
   ================= */

.intro,
.main-content {
    display: flex;
    flex-direction: column;
    padding-left: 2em; /* 32 / 16 = 2 */
    padding-right: 2em;    
}

/* =================
    Intro
   ================= */



/* 
  Challenge: Apply a full background image
    - Set the background of .intro to the image `intro-bg.png`
    - The background image should scale to fill the entire
      width and height of .intro while preserving its ratio
*/


.intro { 
    justify-content: space-between;
    min-height: 250px;
    text-align: center;
    color: #fff;
    background-color: #9480e4;
    background-image: url(images/intro-bg.png);
    background-size: cover;
    /* You can declare the background shorthand
    property like this:
    background: #9480e4 url(images/intro-bg.png) */
    padding-bottom: 1.5em;
}

/* ====================
    Main content
   ==================== */
   
/* 
  Challenge: Style the main content
    - Use flexbox to horizontally center all items inside 
      .main-content. The <p> text should remain left-aligned.
    - Use em to give .main-content a top padding equal to 40px
      and a left and right padding equal to 32px.
    - Set the width of .img-main to 120px and display it as a rounded image.
*/

.main-content {
    align-items: center;
    padding-top: 2.5em; /* 40 / 16 = 2.5 */
    padding-left: 2em; /* 32 / 16 = 2 */
    padding-right: 2em;
}

.img-main {
    width: 120px;
    border-radius: 25%;
    margin-top: 0.5em;
}

/* Condensing the paragraph text
like this */

.main-content p,
form {
  max-width: 450px;
}

/* =================
    Form
   ================= */

/* 
  Challenge: Style the submit button
    - The button should have the same font-family, width
      and border-radius of the input elements
    - Use the .btn selector to set the custom button styles;
      use the slide as a guide
    - Button colors:
      - Background: #8a71ec
      - Background on hover: #b7a7f6
*/

/* My Solution */

/* .btn  {
  font-family: inherit;
  width: 100%;
  border: none;
  border-radius: 5px;
  color: whitesmoke;
  font-weight: bold;
  background-color: #8a71ec;
  padding: 0.75em;
  text-transform: uppercase;
  margin-top: 0.75em;
} */

/* .btn:hover {
  background-color: #b7a7f6;
} */

/* Instructor's Solution */

input, 
button {
  font-family: inherit;
  width: 100%;
  border-radius: 5px;
}

input {
  padding: 0.5em;
  margin-bottom: 0.75em;
  border: 2px solid #d1d5db;
}

input:focus {
  outline: none;
  border-color: #8a71ec;
  background-color: #e6e8ec;
}

.btn {
  border: none;
  font-weight: bold;
  padding: 1em 0;
  letter-spacing: 1px;
  text-transform: uppercase;
  cursor: pointer;
}

.btn-primary {
  color: white;
  background-color: #8a71ec;
  margin-top: 1em; 
}

.btn-primary:hover,
.btn-primary:focus {
  background-color: #b7a7f6;
}


/* 
  Challenge: Style the form inputs
    - Display each input on a separate line so they
      expand to the full width of their container
    - Use a bottom margin to create space between the input elements
    - Apply a padding in em that's equal to half the input's
      font-size to all 4 sides
*/

/* input {
  font-family: inherit; /* Will give input element the same value as its parent element 
  width: 100%;
  padding: 0.5em;
  margin-bottom: 0.75em;
  border: 2px solid #d1d5db;
  border-radius: 5px;
} */

/* input:focus {
  outline: none;
  border-color: #8a71ec;
  background-color: #e6e8ec;
} */
/* Another Solution:

/* input {
  display: flex;
  flex-direction: column;
  margin-bottom: 0.75em;
  padding: 0.5em;
} */


/* Another Challenge: 

/* 
  Challenge: Style the form inputs
    - Give the inputs a solid 2px border using the value #d1d5db
    - Round the corners of the input fields by 5px
    - On focus, update an inputâ€™s border color to #8a71ec
      and background color to #e6e8ec
*/


/* =================
    Media queries 
   ================= */

/* 
  Challenge: Adjust text for wider screens
    - In the media query, increase the h1 font-size to
      a rem value equal to 52px
    - Increase the h2 font-size to a rem value equal to 42px
    - Increase the font-size of .beta-text to a 
      rem value equal to 20px
*/   




/* 
  Challenge:
    - Expand the height of .intro so that it takes up
      the full height of the browser window
    - Vertically center the content inside .main-content
*/


/* 
  Challenge: Adjust the layout for wider screens
    - Add a media query that targets a browser width of 576px or wider
    - Within the media query, convert the parent element of .intro and 
      .main-content to a flex container
    - Set the width .intro and .main-content to exactly
      half the total width of their parent container
*/

@media (min-width: 576px) {
    body {
        display: flex;
    }

    h1 {
        /* font-size: 3.25rem; */
        font-size: 5vw; /* viewport width property */
    }

    h2 {
        font-size: 2.63rem;
    }

    .beta-text {
        font-size: 1.25rem;
    }
    
    .intro,
    .main-content {
        width: 50%;
        /*could also set 
        flex-basis to "50%"
        Or, use the "flex 
        shorthand" like this:
        "flex: 50%", or even
        "flex: 1" because it
        distributes the items
        evenly across the page */

    }

    .intro {
        min-height: 100vh;
    }

    .main-content {
        justify-content: center;
        padding-top: 0;
    }
}